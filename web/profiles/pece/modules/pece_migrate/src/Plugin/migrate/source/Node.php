<?php
/**
 * @file
 * Contains \Drupal\pece_migrate\Plugin\migrate\source\Node.
 */
namespace  Drupal\pece_migrate\Plugin\migrate\source;
use Drupal\migrate\Row;
use Drupal\node\Plugin\migrate\source\d7\NodeComplete as D7Node;

/**
 * Gets all node revisions from the source, including translation revisions.
 *
 * @MigrateSource(
 *   id = "v1_node",
 *   source_module = "node"
 * )
 */
class Node extends D7Node {

  public function query() {
    $query =  parent::query(); // TODO: Change the autogenerated stub

    return $query;
  }

  /**
   * {@inheritdoc}
   */
  public function fields() {
    $fields = parent::fields() + ['alias' => $this->t('Path alias')];
    $fields += ['permission_by_group_view' => $this->t('PermissÃ£o para grupos')];
    $fields += ['permission_by_user' => $this->t('Permission by user')];
    return $fields;
  }

  /**
   * {@inheritdoc}
   */
  public function prepareRow(Row $row) {
    // Include path alias.
    $nid = $row->getSourceProperty('nid');
    $query = $this->select('url_alias', 'ua')
      ->fields('ua', ['alias']);
    $query->condition('ua.source', 'node/' . $nid);
    $alias = $query->execute()->fetchField();
    if (!empty($alias)) {
      $row->setSourceProperty('alias', '/' . $alias);
    }
    $query = $this->select('og_membership', 'ogm')
      ->fields('ogm', ['gid']);
    $query->condition('ogm.etid', $nid);

    // Get all permission in the table og_membership.
    $permission_by_group_view = $query->execute()->fetchCol();
    foreach ($permission_by_group_view as $key => $item) {
      $permission_by_group_view[$key] = [
        'target_id' => $item,
        'grant_view' => 1,
        'grant_update' => 0,
        'grant_delete' => 0,
      ];
    }

    // Set the permission in the row.
    $row->setSourceProperty('permission_by_group_view', $permission_by_group_view);

    // Get all contributors
    $query = $this->select('field_data_field_pece_contributors', 'contributors')
      ->fields('contributors', ['field_pece_contributors_target_id']);
    $query->condition('contributors.entity_id', $nid);
    // Get all permission by contributors
    $permission_by_user = $query->execute()->fetchCol();
    foreach ($permission_by_user as $key => $item) {
      $permission_by_user[$key] = [
        'target_id' => $item,
        'grant_view' => 1,
        'grant_update' => 1,
        'grant_delete' => 0,
      ];
    }
    // Set the permission in the row.
    $row->setSourceProperty('permission_by_user', $permission_by_user);

    return parent::prepareRow($row);
  }
}
